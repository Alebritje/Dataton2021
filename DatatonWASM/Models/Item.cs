// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DatatonWASM.Models;
//
//    var item = Item.FromJson(jsonString);

namespace DatatonWASM.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Item
    {
        [JsonProperty("_id")]
        public object Id { get; set; }

        [JsonProperty("id")]
        public Guid ItemId { get; set; }

        [JsonProperty("metadata")]
        public object Metadata { get; set; }

        [JsonProperty("declaracion")]
        public object Declaracion { get; set; }

        [JsonProperty("_rid")]
        public object Rid { get; set; }

        [JsonProperty("_self")]
        public object Self { get; set; }

        [JsonProperty("_etag")]
        public object Etag { get; set; }

        [JsonProperty("_attachments")]
        public object Attachments { get; set; }

        [JsonProperty("_ts")]
        public long Ts { get; set; }
    }

    public partial class Item
    {
        public static Item FromJson(string json) => JsonConvert.DeserializeObject<Item>(json, DatatonWASM.Models.Converter.Settings);
    }

    public static class Serializer
    {
        public static string ToJson(this Item self) => JsonConvert.SerializeObject(self, DatatonWASM.Models.Converter.Settings);
    }

    internal static class Converters
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
